import os
import time
import requests
import snscrape.modules.twitter as sntwitter
from dotenv import load_dotenv

# Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
load_dotenv()

# L·∫•y token & chat ID t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
TWITTER_USERNAME = os.getenv("TWITTER_USERNAME")

# H√†m g·ª≠i tin nh·∫Øn Telegram
def send_to_telegram(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": message,
        "parse_mode": "HTML"
    }
    response = requests.post(url, data=data)
    if not response.ok:
        print("‚ùå Failed to send message:", response.text)

# H√†m l·∫•y tweet m·ªõi nh·∫•t
def get_latest_tweet(username):
    tweets = sntwitter.TwitterUserScraper(username).get_items()
    for tweet in tweets:
        return tweet.content.strip()

# V√≤ng l·∫∑p ki·ªÉm tra tweet m·ªõi
if __name__ == "__main__":
    print("üöÄ Bot ƒëang ch·∫°y...")
    last_tweet = None
    while True:
        try:
            current_tweet = get_latest_tweet(TWITTER_USERNAME)
            if current_tweet and current_tweet != last_tweet:
                send_to_telegram(f"üÜï B√†i m·ªõi t·ª´ @{TWITTER_USERNAME}:\n\n{current_tweet}")
                last_tweet = current_tweet
            else:
                print("‚è≥ Kh√¥ng c√≥ tweet m·ªõi.")
        except Exception as e:
            print("‚ö†Ô∏è L·ªói:", str(e))

        time.sleep(30)  # ki·ªÉm tra m·ªói 30 gi√¢y
